[gd_scene load_steps=3 format=3 uid="uid://c1r4djsndgyme"]

[ext_resource type="Texture2D" uid="uid://nprr321ewwia" path="res://items/basic-armor-1.png" id="1_gwgdr"]

[sub_resource type="GDScript" id="GDScript_6q75d"]
script/source = "extends Node

@export var adef = 10


func unequip(user_object: Object):
  if not is_in_group('equipped'):
    return
  print('armor unequipped')
  var current_adef = user_object.get_meta('adef')
  remove_from_group('equipped')
  Watch.set_object_meta(self, 'is_equipped', false)
  Watch.set_object_meta(self, 'ui_cell_highlight', false)
  Watch.set_object_meta(user_object, 'adef', current_adef - adef)


func toggle_equipped(user_object: Object):
  if not Lib.is_child_of(user_object, self):
    return
  
  var current_adef = user_object.get_meta('adef')
  var equipped = is_in_group('equipped')
  if equipped:
    unequip(user_object)
  else:
    var can_equip = Comp.call_method_or(user_object, 'can_equip', [self], true)
    if not can_equip:
      return
    add_to_group('equipped')
    Comp.set_prop(user_object, 'adef', current_adef + adef)
    
  var toggleable_gear_cell_maker = $makeGearUiCell
  if toggleable_gear_cell_maker != null:
    Comp.run_method(toggleable_gear_cell_maker, 'toggle', [not equipped])
  

func handle_left_clicked(event: InputEventMouse):
  get_viewport().set_input_as_handled()
  if Lib.is_dragging:
    return
  if not (event is InputEventMouseButton):
    return
  if event.pressed:
    return
  if event.button_index != MOUSE_BUTTON_LEFT:
    return
  if get_parent() != Lib.player_character:
    return
  #only when not dragging, as child of player character, and left button just released:
  toggle_equipped(Lib.player_character)










"

[node name="basicArmor" type="Node" groups=["gear"]]
script = SubResource("GDScript_6q75d")
metadata/ui_cell_left_click = "toggle_equipped"
metadata/ui_cell_display = ExtResource("1_gwgdr")
metadata/equipment_classes = ["armor"]
metadata/gear_removed = "unequip"
