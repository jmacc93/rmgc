[gd_scene load_steps=2 format=3 uid="uid://clvldj4ghxtiw"]

[sub_resource type="GDScript" id="GDScript_64v8g"]
script/source = "extends Control

var parent_container

@export var gear_node : Node

@export var target_parent_group = 'container'

@export var highlighted_color : Color
@export var non_highlighted_color : Color

func _enter_tree():
  self.connect('gui_input', Callable(self, 'on_gui_input'))


func on_gui_input(event: InputEvent):
  Watch.notify(Watch.ui_notifier, 'ui_cell_input', [self, event])


func find_ui_display_texture(node: Node) -> Texture2D:
  var resource = node.get_meta('ui_cell_display')
  if (resource != null) and (resource is Texture2D):
    return resource
  else:
    return null


func is_empty():
  return (gear_node == null)


func mirror_highlighting():
  var gear_highlighted = Comp.get_object_meta(gear_node, 'ui_cell_highlight')
  $background.color = highlighted_color if gear_highlighted else non_highlighted_color


func set_gear_node(new_gear_node: Node):
  gear_node = new_gear_node
  if gear_node == null:
    return
  
  parent_container = Lib.get_parent_in_group(gear_node, target_parent_group)
  if parent_container == null:
    push_error('No ', target_parent_group,' parent node for given node')
    queue_free()
    return
  
  gear_node.connect('tree_exiting', func():
    Watch.stop_calling_on_set_meta(gear_node, 'ui_cell_highlight', Callable(self, 'mirror_highlighting'))
    $TextureRect.texture = null
    set_gear_node(null)
  , CONNECT_ONE_SHOT)
  
  mirror_highlighting()
  Watch.call_on_set_meta(gear_node, 'ui_cell_highlight', Callable(self, 'mirror_highlighting') )
  
  var display_texture = find_ui_display_texture(gear_node)
  $TextureRect.texture = display_texture













"

[node name="uiContainerCell" type="TextureButton" node_paths=PackedStringArray("gear_node") groups=["ui_gear_cell"]]
custom_minimum_size = Vector2(10, 10)
script = SubResource("GDScript_64v8g")
gear_node = NodePath("")
highlighted_color = Color(0.644911, 0.786938, 0.712107, 1)
non_highlighted_color = Color(0.905882, 0.690196, 0.619608, 1)

[node name="background" type="ColorRect" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.905882, 0.690196, 0.619608, 1)
metadata/highlight_color = Color(0.644911, 0.786938, 0.712107, 1)

[node name="TextureRect" type="TextureRect" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
expand_mode = 1
stretch_mode = 6
