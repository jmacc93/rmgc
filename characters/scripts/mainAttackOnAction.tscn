[gd_scene load_steps=2 format=3 uid="uid://b8oc4qapcpigw"]

[sub_resource type="GDScript" id="GDScript_14qsd"]
script/source = "extends Node

var character_composite

@export var repeatedly = true
@export var action = 'shoot'

var pressed = false


func find_main_attack_abilities_and_attack():
  var parent = get_parent()
  var main_attack_node_list = Lib.get_children_in_group(parent, 'main_attack')
  for attack_node in main_attack_node_list:
    Comp.run_method(attack_node, 'attack', [parent])


func _unhandled_input(_event):
  if Input.is_action_just_pressed(action):
    pressed = true
    find_main_attack_abilities_and_attack()


func _process(_delta):
  if repeatedly and pressed:
    find_main_attack_abilities_and_attack()
    if Input.is_action_just_released(action):
      pressed = false
"

[node name="mainAttackOnAction" type="Node"]
editor_description = "On unhandled action press (ie: mouse press over the background, nothing, etc) this finds all `main_attack` group sibling nodes and calls their `attack` method. When the `repeatedly` property is true (the default), as long as the action is pressed it continues to call siblings' `attack` methods. The sibling `main_attack` group nodes should limit their fire rate

The `action` property here is which action should be pressed to fire. It defaults to `shoot`, and that's what it probably should stay at. The mouse should be bound to the `shoot` action by default"
script = SubResource("GDScript_14qsd")
