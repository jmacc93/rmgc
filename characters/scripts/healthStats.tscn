[gd_scene load_steps=3 format=3]

[ext_resource type="Texture2D" uid="uid://b3wyngm1q544d" path="res://ui/sprites/ui-box-2.png" id="1_1ncad"]


[sub_resource type="GDScript" id="GDScript_ukxk7"]
script/source = "extends Node

@export var initial_max_hp = 100.0
@export var initial_hp = 100.0
@export var initial_hp_regen = 1.0 #hp / second

@export var initial_mdef = 1.0 #multiplicative defence, divides damage taken
@export var initial_adef = 0.0 #additive defence, subtracts from damage taken up to 0

@export var always_overheal = false
@export var can_overheal = false

var next_hp_regen_time = 0
var hp_regen_delay = 1000



func _notification(what):
  match what:
    NOTIFICATION_PARENTED:  
      var parent = get_parent()
      
      Comp.set_prop(parent, 'hp', initial_hp)
      Comp.set_prop(parent, 'max_hp', initial_max_hp)
      Comp.set_prop(parent, 'hp_regen', initial_hp_regen)
      Comp.set_prop(parent, 'mdef', initial_mdef)
      Comp.set_prop(parent, 'adef', initial_adef)
      
      Comp.set_prop(parent, 'heal_by', heal_by)
      Comp.set_prop(parent, 'overheal_by', overheal_by)
      Comp.set_prop(parent, 'hurt_by', hurt_by)
    
    NOTIFICATION_UNPARENTED:
      var parent = get_parent()
      
      Comp.remove_prop(parent, 'hp', 0)
      Comp.remove_prop(parent, 'max_hp', 0)
      Comp.remove_prop(parent, 'hp_regen', 0)
      Comp.remove_prop(parent, 'mdef', 0)
      Comp.remove_prop(parent, 'adef', 0)
      
      Comp.remove_prop(parent, 'heal_by')
      Comp.remove_prop(parent, 'overheal_by')
      Comp.remove_prop(parent, 'hurt_by')


func hurt_by(dmg: float, _dmger: Object):
  var parent = get_parent()
  var hp = Comp.get_prop(parent, 'hp')
  var mdef = Comp.get_prop(parent, 'mdef')
  var adef = Comp.get_prop(parent, 'adef')
  var new_hp = hp - max(0, dmg * mdef - adef)
  Comp.set_prop(parent, 'hp', new_hp)


func heal_by(change: float):
  var parent = get_parent()
  var hp = Comp.get_prop(parent, 'hp')
  var max_hp = Comp.get_prop(parent, 'max_hp')
  var new_hp = (hp + change) if always_overheal else min(max_hp, hp + change)
  Comp.set_prop(parent, 'hp', new_hp)


func overheal_by(change: float):
  if not can_overheal:
    heal_by(change)
    return
  var parent = get_parent()
  var hp = Comp.get_prop(parent, 'hp')
  var new_hp = hp + change
  Comp.set_prop(parent, 'hp', new_hp)


var active_ui_display_element: Control = null
func make_stat_display_element():
  var template_node = $templateUiStatDisplayElement
  if template_node == null:
    push_error('No template node for healthStats make_ui_display_element')
    return
  
  if active_ui_display_element != null:
    #remove already-present element
    active_ui_display_element.queue_free()
  
  var element = template_node.duplicate(DUPLICATE_GROUPS & DUPLICATE_SCRIPTS & DUPLICATE_SIGNALS)
  element.visible = true
  element.process_mode = Node.PROCESS_MODE_INHERIT
  
  var parent = get_parent()
  
  var hp_label = element.get_node('hpHBox/currentHpValueLabel')
  Comp.call_on_set_prop_and_now(parent, 'hp', func():
    if not is_instance_valid(hp_label):
      return
    var hp = Comp.get_prop(parent, 'hp')
    hp_label.text = str(hp)
  )
  
  var max_hp_label = element.get_node('hpHBox/maxHpValueLabel')
  Comp.call_on_set_prop_and_now(parent, 'max_hp', func():
    if not is_instance_valid(max_hp_label):
      return
    var max_hp = Comp.get_prop(parent, 'max_hp')
    max_hp_label.text = str(max_hp)
  )
  
  var hp_regen_label = element.get_node('regenHBox/hpRegenLabel')
  Comp.call_on_set_prop_and_now(parent, 'hp_regen', func():
    if not is_instance_valid(hp_regen_label):
      return
    var hp_regen = Comp.get_prop(parent, 'hp_regen')
    hp_regen_label.text = str(hp_regen)
  )
  
  var adef_label = element.get_node('adefHBox/adefValueLabel')
  Comp.call_on_set_prop_and_now(parent, 'adef', func():
    if not is_instance_valid(adef_label):
      return
    var adef = Comp.get_prop(parent, 'adef')
    if adef != 0:
      adef_label.text = str(adef)
      element.get_node('adefLabel').visible = true
      element.get_node('adefHBox').visible = true
    else:
      element.get_node('adefLabel').visible = false
      element.get_node('adefHBox').visible = false
  )
  
  var mdef_label = element.get_node('mdefHBox/mdefValueLabel')
  Comp.call_on_set_prop_and_now(parent, 'mdef', func():
    if not is_instance_valid(mdef_label):
      return
    var mdef = Comp.get_prop(parent, 'mdef')
    if mdef != 1.0:
      mdef_label.text = str(mdef)
      element.get_node('mdefLabel').visible = true
      element.get_node('mdefHBox').visible = true
    else:
      element.get_node('mdefLabel').visible = false
      element.get_node('mdefHBox').visible = false
  )
  
  active_ui_display_element = element
  return element


func _process(_delta):
  var current_time = Time.get_ticks_msec()
  if current_time >= next_hp_regen_time:
    next_hp_regen_time = current_time + hp_regen_delay
    var parent = get_parent()
    var hp = Comp.get_prop(parent, 'hp')
    var hp_regen = Comp.get_prop(parent, 'hp_regen')
    var max_hp = Comp.get_prop(parent, 'max_hp')
    if hp >= max_hp:
      return
    Comp.set_prop(parent, 'hp', min(hp + hp_regen, max_hp))







"

[node name="healthStats" type="Node"]
script = SubResource("GDScript_ukxk7")

[node name="templateUiStatDisplayElement" type="Control" parent="."]
visible = false
custom_minimum_size = Vector2(59.135, 32)
layout_mode = 3
anchors_preset = 0
offset_right = 59.135
offset_bottom = 32.0

[node name="background" type="NinePatchRect" parent="templateUiStatDisplayElement"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("1_1ncad")
patch_margin_left = 3
patch_margin_top = 3
patch_margin_right = 3
patch_margin_bottom = 3

[node name="hpLabel" type="Label" parent="templateUiStatDisplayElement"]
layout_mode = 2
offset_left = 3.0
offset_top = 3.0
offset_right = 30.0
offset_bottom = 29.0
scale = Vector2(0.25, 0.25)
text = "hp:"

[node name="hpHBox" type="HBoxContainer" parent="templateUiStatDisplayElement"]
layout_mode = 0
offset_left = 15.9685
offset_top = 2.93813
offset_right = 86.9685
offset_bottom = 28.9381
scale = Vector2(0.25, 0.25)

[node name="currentHpValueLabel" type="Label" parent="templateUiStatDisplayElement/hpHBox"]
layout_mode = 2
text = "500"

[node name="hpSeparatorLabel" type="Label" parent="templateUiStatDisplayElement/hpHBox"]
layout_mode = 2
text = "/"

[node name="maxHpValueLabel" type="Label" parent="templateUiStatDisplayElement/hpHBox"]
layout_mode = 2
size_flags_horizontal = 3
text = "500"

[node name="hpRegenLabel" type="Label" parent="templateUiStatDisplayElement"]
layout_mode = 2
offset_left = 3.0
offset_top = 8.4731
offset_right = 35.0
offset_bottom = 34.4731
scale = Vector2(0.25, 0.25)
text = "hpr:
"

[node name="regenHBox" type="HBoxContainer" parent="templateUiStatDisplayElement"]
layout_mode = 0
offset_left = 15.9685
offset_top = 8.51768
offset_right = 86.9685
offset_bottom = 34.5177
scale = Vector2(0.25, 0.25)

[node name="hpRegenLabel" type="Label" parent="templateUiStatDisplayElement/regenHBox"]
layout_mode = 2
text = "500"

[node name="hpPerSecLabel" type="Label" parent="templateUiStatDisplayElement/regenHBox"]
layout_mode = 2
text = "hp/s"

[node name="adefLabel" type="Label" parent="templateUiStatDisplayElement"]
layout_mode = 2
offset_left = 3.0
offset_top = 13.4731
offset_right = 42.0
offset_bottom = 39.4731
scale = Vector2(0.25, 0.25)
text = "adef:"

[node name="adefHBox" type="HBoxContainer" parent="templateUiStatDisplayElement"]
layout_mode = 0
offset_left = 15.9685
offset_top = 13.5177
offset_right = 86.9685
offset_bottom = 39.5177
scale = Vector2(0.25, 0.25)

[node name="adefValueLabel" type="Label" parent="templateUiStatDisplayElement/adefHBox"]
layout_mode = 2
text = "500"

[node name="adefUnitsLabel" type="Label" parent="templateUiStatDisplayElement/adefHBox"]
layout_mode = 2
text = "hp"

[node name="mdefLabel" type="Label" parent="templateUiStatDisplayElement"]
layout_mode = 2
offset_left = 3.0
offset_top = 18.4731
offset_right = 42.0
offset_bottom = 44.4731
scale = Vector2(0.25, 0.25)
text = "mdef:"

[node name="mdefHBox" type="HBoxContainer" parent="templateUiStatDisplayElement"]
layout_mode = 0
offset_left = 15.9685
offset_top = 18.5177
offset_right = 86.9685
offset_bottom = 44.5177
scale = Vector2(0.25, 0.25)

[node name="mdefValueLabel" type="Label" parent="templateUiStatDisplayElement/mdefHBox"]
layout_mode = 2
text = "500"

[node name="mdefUnitsLabel" type="Label" parent="templateUiStatDisplayElement/mdefHBox"]
layout_mode = 2
text = "xhp"
