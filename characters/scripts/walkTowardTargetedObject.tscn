[gd_scene load_steps=2 format=3 uid="uid://q6hdeppfpvc1"]

[sub_resource type="GDScript" id="GDScript_mc3c8"]
script/source = "extends Node
    
@export var disabled = false

@export var stay_distance = 50.0


func _notification(what):
  match what:
    NOTIFICATION_PARENTED:
      set_process(true)
    NOTIFICATION_UNPARENTED:
      set_process(false)


func _process(_delta):
  if disabled:
    return
  
  var parent = get_parent()
  
  #is there a target?
  var target_object = Comp.get_prop(parent, 'target_object', null)
  if (target_object == null) or (not is_instance_valid(target_object)) or (not ('global_position' in target_object)):
    return
  
  var targets_position = target_object.global_position
  var vec_to_target = parent.global_position - targets_position
  if vec_to_target.length() >= stay_distance:
    var adjusted_target_point = targets_position + vec_to_target.normalized() * stay_distance
    var move_vec = (adjusted_target_point - parent.global_position).normalized()
    Comp.call_method(parent, 'walk_by', [move_vec])
  



"

[node name="walkTowardTargetedObject" type="Node"]
editor_description = "This calls the parent composite's `walk_by` method to move it toward the parent composite's `target_object` if it is non-null

The `stay_distance` property is the distance requirement to cause the parent composite to walk toward the target object. If the current distance to the target object is less than `stay_distance` then the parent composite doesn't move. This causes the composite to move up to `stay_distance` away from its target then stop. Set this property to 0 to make the composite always approach its target

The parent composite must have a `global_position` property"
script = SubResource("GDScript_mc3c8")
