[gd_scene load_steps=3 format=3 uid="uid://cm4panbqhuipf"]

[ext_resource type="PackedScene" uid="uid://denlwjbxajghs" path="res://scripts/alphaMaskParentWithShaderAndMaskFromFile.tscn" id="1_rl5e5"]

[sub_resource type="GDScript" id="GDScript_hj66j"]
script/source = "extends Node

func _enter_tree():
  var parent = get_parent()
  
  var init_prop = Comp.get_prop(parent, 'init_texture', null)
  if init_prop == null:
    push_error('No init_texture property given for parent ', parent)
    return
  
  if init_prop is Array:
    init_with_array(init_prop)
  
  elif init_prop is String: #assuming directory path string
    init_with_directory(init_prop)
  
  elif init_prop is Texture2D:
    init_with_texture(init_prop)
  
  else:
    push_error('Unrecognized init_texture property ', init_prop, ' in ', parent)


func init_with_array(array: Array):
  var textures = []
  for element in array:
    if element is Texture2D:
      textures.push_back(element)
    else:
      push_error('init_texture array element ', element, ' not supported')
  
  if textures.size() == 0:
    push_error(\"No textures given in init_texture array\")
    return
  
  var selected_texture = Lib.pick_random_from(textures)
  var parent = get_parent()
  parent.texture = selected_texture


func init_with_directory(directory_path: String):
  get_parent().texture = Lib.random_texture2d_from(directory_path)


func init_with_texture(texture: Texture2D):
  get_parent().texture = texture
  

"

[node name="randomFloorDecoration" type="Sprite2D"]
z_index = -10
metadata/init_texture = "res://environment/ground_spot_textures/sprites/ash/"

[node name="setParentTextureToRandomFromParentInitMeta" type="Node" parent="."]
script = SubResource("GDScript_hj66j")

[node name="alphaMaskParentWithShaderAndMaskFromFile" parent="." instance=ExtResource("1_rl5e5")]
