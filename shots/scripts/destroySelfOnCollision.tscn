[gd_scene load_steps=2 format=3 uid="uid://bsewvrl0lv0rl"]

[sub_resource type="GDScript" id="GDScript_vtxd2"]
script/source = "extends Node

## restrict to a particular group, or leave blank to not restrict to a group
@export var group = ''


func _notification(what):
  match what:
    NOTIFICATION_PARENTED:
      Watch.call_on_notify(get_parent(), 'collision', on_collision)
    NOTIFICATION_UNPARENTED:
      Watch.stop_calling_on_notify(get_parent(), 'collision', on_collision)


func on_collision(collision):
  if not collision:
    return
  
  var parent = get_parent()
  
  #only destroy self on collision with particular group?
  if group != '':
    var body = collision.get_collider()
    if not body.is_in_group(group):
      return
  
  #kill self
  Watch.notify(parent, 'die', [])
  if not Comp.run_method(parent, 'die', []):
    parent.queue_free()
  
"

[node name="destroySelfOnCollision" type="Node"]
editor_description = "On a `collision` `Watch` notification on the parent, this calls the `collision` `Watch` notification and then either runs the parent's `die` method (which should `queue_free` the parent) or just `queue_free`s the parent

This is primarily for removing a shot parent when it hits an obstact "
script = SubResource("GDScript_vtxd2")
